#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BibliotecaUdc.Persistencia.MODELO_DATOS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BIBLIOTECAUDC")]
	public partial class BIBLIOTECADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAUDITORIA(AUDITORIA instance);
    partial void UpdateAUDITORIA(AUDITORIA instance);
    partial void DeleteAUDITORIA(AUDITORIA instance);
    partial void InsertAUTOR(AUTOR instance);
    partial void UpdateAUTOR(AUTOR instance);
    partial void DeleteAUTOR(AUTOR instance);
    partial void InsertCATEGORIA(CATEGORIA instance);
    partial void UpdateCATEGORIA(CATEGORIA instance);
    partial void DeleteCATEGORIA(CATEGORIA instance);
    partial void InsertEDITORIAL(EDITORIAL instance);
    partial void UpdateEDITORIAL(EDITORIAL instance);
    partial void DeleteEDITORIAL(EDITORIAL instance);
    partial void InsertESTUDIANTE(ESTUDIANTE instance);
    partial void UpdateESTUDIANTE(ESTUDIANTE instance);
    partial void DeleteESTUDIANTE(ESTUDIANTE instance);
    partial void InsertGENERO(GENERO instance);
    partial void UpdateGENERO(GENERO instance);
    partial void DeleteGENERO(GENERO instance);
    partial void InsertLIBRO(LIBRO instance);
    partial void UpdateLIBRO(LIBRO instance);
    partial void DeleteLIBRO(LIBRO instance);
    partial void InsertPRESTAMO(PRESTAMO instance);
    partial void UpdatePRESTAMO(PRESTAMO instance);
    partial void DeletePRESTAMO(PRESTAMO instance);
    partial void InsertPROGRAMA(PROGRAMA instance);
    partial void UpdatePROGRAMA(PROGRAMA instance);
    partial void DeletePROGRAMA(PROGRAMA instance);
    partial void InsertTIPODOCUMENTO(TIPODOCUMENTO instance);
    partial void UpdateTIPODOCUMENTO(TIPODOCUMENTO instance);
    partial void DeleteTIPODOCUMENTO(TIPODOCUMENTO instance);
    #endregion
		
		public BIBLIOTECADataContext() : 
				base(global::BibliotecaUdc.Persistencia.Properties.Settings.Default.BIBLIOTECAUDCConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BIBLIOTECADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BIBLIOTECADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BIBLIOTECADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BIBLIOTECADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AUDITORIA> AUDITORIA
		{
			get
			{
				return this.GetTable<AUDITORIA>();
			}
		}
		
		public System.Data.Linq.Table<AUTOR> AUTOR
		{
			get
			{
				return this.GetTable<AUTOR>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORIA> CATEGORIA
		{
			get
			{
				return this.GetTable<CATEGORIA>();
			}
		}
		
		public System.Data.Linq.Table<EDITORIAL> EDITORIAL
		{
			get
			{
				return this.GetTable<EDITORIAL>();
			}
		}
		
		public System.Data.Linq.Table<ESTUDIANTE> ESTUDIANTE
		{
			get
			{
				return this.GetTable<ESTUDIANTE>();
			}
		}
		
		public System.Data.Linq.Table<GENERO> GENERO
		{
			get
			{
				return this.GetTable<GENERO>();
			}
		}
		
		public System.Data.Linq.Table<LIBRO> LIBRO
		{
			get
			{
				return this.GetTable<LIBRO>();
			}
		}
		
		public System.Data.Linq.Table<PRESTAMO> PRESTAMO
		{
			get
			{
				return this.GetTable<PRESTAMO>();
			}
		}
		
		public System.Data.Linq.Table<PROGRAMA> PROGRAMA
		{
			get
			{
				return this.GetTable<PROGRAMA>();
			}
		}
		
		public System.Data.Linq.Table<TIPODOCUMENTO> TIPODOCUMENTO
		{
			get
			{
				return this.GetTable<TIPODOCUMENTO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUDITORIA")]
	public partial class AUDITORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuditorId;
		
		private string _AuditorNombre;
		
		private string _AuditorApellido;
		
		private System.DateTime _Fecha;
		
		private string _Descripcion;
		
		private System.TimeSpan _HoraModificacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditorIdChanging(int value);
    partial void OnAuditorIdChanged();
    partial void OnAuditorNombreChanging(string value);
    partial void OnAuditorNombreChanged();
    partial void OnAuditorApellidoChanging(string value);
    partial void OnAuditorApellidoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnHoraModificacionChanging(System.TimeSpan value);
    partial void OnHoraModificacionChanged();
    #endregion
		
		public AUDITORIA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorNombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string AuditorNombre
		{
			get
			{
				return this._AuditorNombre;
			}
			set
			{
				if ((this._AuditorNombre != value))
				{
					this.OnAuditorNombreChanging(value);
					this.SendPropertyChanging();
					this._AuditorNombre = value;
					this.SendPropertyChanged("AuditorNombre");
					this.OnAuditorNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorApellido", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string AuditorApellido
		{
			get
			{
				return this._AuditorApellido;
			}
			set
			{
				if ((this._AuditorApellido != value))
				{
					this.OnAuditorApellidoChanging(value);
					this.SendPropertyChanging();
					this._AuditorApellido = value;
					this.SendPropertyChanged("AuditorApellido");
					this.OnAuditorApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraModificacion", DbType="Time NOT NULL")]
		public System.TimeSpan HoraModificacion
		{
			get
			{
				return this._HoraModificacion;
			}
			set
			{
				if ((this._HoraModificacion != value))
				{
					this.OnHoraModificacionChanging(value);
					this.SendPropertyChanging();
					this._HoraModificacion = value;
					this.SendPropertyChanged("HoraModificacion");
					this.OnHoraModificacionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUTOR")]
	public partial class AUTOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutorId;
		
		private string _Nombre;
		
		private string _Nacionalidad;
		
		private EntitySet<LIBRO> _LIBRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutorIdChanging(int value);
    partial void OnAutorIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnNacionalidadChanging(string value);
    partial void OnNacionalidadChanged();
    #endregion
		
		public AUTOR()
		{
			this._LIBRO = new EntitySet<LIBRO>(new Action<LIBRO>(this.attach_LIBRO), new Action<LIBRO>(this.detach_LIBRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AutorId
		{
			get
			{
				return this._AutorId;
			}
			set
			{
				if ((this._AutorId != value))
				{
					this.OnAutorIdChanging(value);
					this.SendPropertyChanging();
					this._AutorId = value;
					this.SendPropertyChanged("AutorId");
					this.OnAutorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nacionalidad", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nacionalidad
		{
			get
			{
				return this._Nacionalidad;
			}
			set
			{
				if ((this._Nacionalidad != value))
				{
					this.OnNacionalidadChanging(value);
					this.SendPropertyChanging();
					this._Nacionalidad = value;
					this.SendPropertyChanged("Nacionalidad");
					this.OnNacionalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AUTOR_LIBRO", Storage="_LIBRO", ThisKey="AutorId", OtherKey="AutorId")]
		public EntitySet<LIBRO> LIBRO
		{
			get
			{
				return this._LIBRO;
			}
			set
			{
				this._LIBRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIBRO(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.AUTOR = this;
		}
		
		private void detach_LIBRO(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.AUTOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIA")]
	public partial class CATEGORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoriaId;
		
		private string _Nombre;
		
		private EntitySet<LIBRO> _LIBRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoriaIdChanging(int value);
    partial void OnCategoriaIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public CATEGORIA()
		{
			this._LIBRO = new EntitySet<LIBRO>(new Action<LIBRO>(this.attach_LIBRO), new Action<LIBRO>(this.detach_LIBRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoriaId
		{
			get
			{
				return this._CategoriaId;
			}
			set
			{
				if ((this._CategoriaId != value))
				{
					this.OnCategoriaIdChanging(value);
					this.SendPropertyChanging();
					this._CategoriaId = value;
					this.SendPropertyChanged("CategoriaId");
					this.OnCategoriaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_LIBRO", Storage="_LIBRO", ThisKey="CategoriaId", OtherKey="CategoriaId")]
		public EntitySet<LIBRO> LIBRO
		{
			get
			{
				return this._LIBRO;
			}
			set
			{
				this._LIBRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIBRO(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = this;
		}
		
		private void detach_LIBRO(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EDITORIAL")]
	public partial class EDITORIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EditorialId;
		
		private string _Nombre;
		
		private EntitySet<LIBRO> _LIBRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEditorialIdChanging(int value);
    partial void OnEditorialIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public EDITORIAL()
		{
			this._LIBRO = new EntitySet<LIBRO>(new Action<LIBRO>(this.attach_LIBRO), new Action<LIBRO>(this.detach_LIBRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorialId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EditorialId
		{
			get
			{
				return this._EditorialId;
			}
			set
			{
				if ((this._EditorialId != value))
				{
					this.OnEditorialIdChanging(value);
					this.SendPropertyChanging();
					this._EditorialId = value;
					this.SendPropertyChanged("EditorialId");
					this.OnEditorialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDITORIAL_LIBRO", Storage="_LIBRO", ThisKey="EditorialId", OtherKey="EditorialId")]
		public EntitySet<LIBRO> LIBRO
		{
			get
			{
				return this._LIBRO;
			}
			set
			{
				this._LIBRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIBRO(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.EDITORIAL = this;
		}
		
		private void detach_LIBRO(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.EDITORIAL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTUDIANTE")]
	public partial class ESTUDIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstudianteId;
		
		private string _Apellido;
		
		private string _Nombre;
		
		private System.DateTime _FechaNacimiento;
		
		private int _GeneroId;
		
		private int _TipoDocumentoId;
		
		private long _NoDocumento;
		
		private string _Email;
		
		private string _Celular;
		
		private string _Direccion;
		
		private int _ProgramaId;
		
		private EntitySet<PRESTAMO> _PRESTAMO;
		
		private EntityRef<GENERO> _GENERO;
		
		private EntityRef<PROGRAMA> _PROGRAMA;
		
		private EntityRef<TIPODOCUMENTO> _TIPODOCUMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstudianteIdChanging(int value);
    partial void OnEstudianteIdChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnGeneroIdChanging(int value);
    partial void OnGeneroIdChanged();
    partial void OnTipoDocumentoIdChanging(int value);
    partial void OnTipoDocumentoIdChanged();
    partial void OnNoDocumentoChanging(long value);
    partial void OnNoDocumentoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnProgramaIdChanging(int value);
    partial void OnProgramaIdChanged();
    #endregion
		
		public ESTUDIANTE()
		{
			this._PRESTAMO = new EntitySet<PRESTAMO>(new Action<PRESTAMO>(this.attach_PRESTAMO), new Action<PRESTAMO>(this.detach_PRESTAMO));
			this._GENERO = default(EntityRef<GENERO>);
			this._PROGRAMA = default(EntityRef<PROGRAMA>);
			this._TIPODOCUMENTO = default(EntityRef<TIPODOCUMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstudianteId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EstudianteId
		{
			get
			{
				return this._EstudianteId;
			}
			set
			{
				if ((this._EstudianteId != value))
				{
					this.OnEstudianteIdChanging(value);
					this.SendPropertyChanging();
					this._EstudianteId = value;
					this.SendPropertyChanged("EstudianteId");
					this.OnEstudianteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneroId", DbType="Int NOT NULL")]
		public int GeneroId
		{
			get
			{
				return this._GeneroId;
			}
			set
			{
				if ((this._GeneroId != value))
				{
					if (this._GENERO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneroIdChanging(value);
					this.SendPropertyChanging();
					this._GeneroId = value;
					this.SendPropertyChanged("GeneroId");
					this.OnGeneroIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoDocumentoId", DbType="Int NOT NULL")]
		public int TipoDocumentoId
		{
			get
			{
				return this._TipoDocumentoId;
			}
			set
			{
				if ((this._TipoDocumentoId != value))
				{
					if (this._TIPODOCUMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoDocumentoIdChanging(value);
					this.SendPropertyChanging();
					this._TipoDocumentoId = value;
					this.SendPropertyChanged("TipoDocumentoId");
					this.OnTipoDocumentoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoDocumento", DbType="BigInt NOT NULL")]
		public long NoDocumento
		{
			get
			{
				return this._NoDocumento;
			}
			set
			{
				if ((this._NoDocumento != value))
				{
					this.OnNoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._NoDocumento = value;
					this.SendPropertyChanged("NoDocumento");
					this.OnNoDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramaId", DbType="Int NOT NULL")]
		public int ProgramaId
		{
			get
			{
				return this._ProgramaId;
			}
			set
			{
				if ((this._ProgramaId != value))
				{
					if (this._PROGRAMA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramaIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramaId = value;
					this.SendPropertyChanged("ProgramaId");
					this.OnProgramaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_PRESTAMO", Storage="_PRESTAMO", ThisKey="EstudianteId", OtherKey="EstudianteId")]
		public EntitySet<PRESTAMO> PRESTAMO
		{
			get
			{
				return this._PRESTAMO;
			}
			set
			{
				this._PRESTAMO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERO_ESTUDIANTE", Storage="_GENERO", ThisKey="GeneroId", OtherKey="GeneroId", IsForeignKey=true)]
		public GENERO GENERO
		{
			get
			{
				return this._GENERO.Entity;
			}
			set
			{
				GENERO previousValue = this._GENERO.Entity;
				if (((previousValue != value) 
							|| (this._GENERO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GENERO.Entity = null;
						previousValue.ESTUDIANTE.Remove(this);
					}
					this._GENERO.Entity = value;
					if ((value != null))
					{
						value.ESTUDIANTE.Add(this);
						this._GeneroId = value.GeneroId;
					}
					else
					{
						this._GeneroId = default(int);
					}
					this.SendPropertyChanged("GENERO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROGRAMA_ESTUDIANTE", Storage="_PROGRAMA", ThisKey="ProgramaId", OtherKey="ProgramaId", IsForeignKey=true)]
		public PROGRAMA PROGRAMA
		{
			get
			{
				return this._PROGRAMA.Entity;
			}
			set
			{
				PROGRAMA previousValue = this._PROGRAMA.Entity;
				if (((previousValue != value) 
							|| (this._PROGRAMA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROGRAMA.Entity = null;
						previousValue.ESTUDIANTE.Remove(this);
					}
					this._PROGRAMA.Entity = value;
					if ((value != null))
					{
						value.ESTUDIANTE.Add(this);
						this._ProgramaId = value.ProgramaId;
					}
					else
					{
						this._ProgramaId = default(int);
					}
					this.SendPropertyChanged("PROGRAMA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPODOCUMENTO_ESTUDIANTE", Storage="_TIPODOCUMENTO", ThisKey="TipoDocumentoId", OtherKey="TipoDocumentoId", IsForeignKey=true)]
		public TIPODOCUMENTO TIPODOCUMENTO
		{
			get
			{
				return this._TIPODOCUMENTO.Entity;
			}
			set
			{
				TIPODOCUMENTO previousValue = this._TIPODOCUMENTO.Entity;
				if (((previousValue != value) 
							|| (this._TIPODOCUMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPODOCUMENTO.Entity = null;
						previousValue.ESTUDIANTE.Remove(this);
					}
					this._TIPODOCUMENTO.Entity = value;
					if ((value != null))
					{
						value.ESTUDIANTE.Add(this);
						this._TipoDocumentoId = value.TipoDocumentoId;
					}
					else
					{
						this._TipoDocumentoId = default(int);
					}
					this.SendPropertyChanged("TIPODOCUMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRESTAMO(PRESTAMO entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE = this;
		}
		
		private void detach_PRESTAMO(PRESTAMO entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GENERO")]
	public partial class GENERO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GeneroId;
		
		private string _Nombre;
		
		private EntitySet<ESTUDIANTE> _ESTUDIANTE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeneroIdChanging(int value);
    partial void OnGeneroIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public GENERO()
		{
			this._ESTUDIANTE = new EntitySet<ESTUDIANTE>(new Action<ESTUDIANTE>(this.attach_ESTUDIANTE), new Action<ESTUDIANTE>(this.detach_ESTUDIANTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneroId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GeneroId
		{
			get
			{
				return this._GeneroId;
			}
			set
			{
				if ((this._GeneroId != value))
				{
					this.OnGeneroIdChanging(value);
					this.SendPropertyChanging();
					this._GeneroId = value;
					this.SendPropertyChanged("GeneroId");
					this.OnGeneroIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERO_ESTUDIANTE", Storage="_ESTUDIANTE", ThisKey="GeneroId", OtherKey="GeneroId")]
		public EntitySet<ESTUDIANTE> ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE;
			}
			set
			{
				this._ESTUDIANTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESTUDIANTE(ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.GENERO = this;
		}
		
		private void detach_ESTUDIANTE(ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.GENERO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIBRO")]
	public partial class LIBRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LibroId;
		
		private string _Nombre;
		
		private int _AutorId;
		
		private int _EditorialId;
		
		private int _NoPaginas;
		
		private System.Nullable<int> _AnoPublicacion;
		
		private int _CategoriaId;
		
		private EntitySet<PRESTAMO> _PRESTAMO;
		
		private EntityRef<AUTOR> _AUTOR;
		
		private EntityRef<CATEGORIA> _CATEGORIA;
		
		private EntityRef<EDITORIAL> _EDITORIAL;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLibroIdChanging(int value);
    partial void OnLibroIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnAutorIdChanging(int value);
    partial void OnAutorIdChanged();
    partial void OnEditorialIdChanging(int value);
    partial void OnEditorialIdChanged();
    partial void OnNoPaginasChanging(int value);
    partial void OnNoPaginasChanged();
    partial void OnAnoPublicacionChanging(System.Nullable<int> value);
    partial void OnAnoPublicacionChanged();
    partial void OnCategoriaIdChanging(int value);
    partial void OnCategoriaIdChanged();
    #endregion
		
		public LIBRO()
		{
			this._PRESTAMO = new EntitySet<PRESTAMO>(new Action<PRESTAMO>(this.attach_PRESTAMO), new Action<PRESTAMO>(this.detach_PRESTAMO));
			this._AUTOR = default(EntityRef<AUTOR>);
			this._CATEGORIA = default(EntityRef<CATEGORIA>);
			this._EDITORIAL = default(EntityRef<EDITORIAL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibroId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LibroId
		{
			get
			{
				return this._LibroId;
			}
			set
			{
				if ((this._LibroId != value))
				{
					this.OnLibroIdChanging(value);
					this.SendPropertyChanging();
					this._LibroId = value;
					this.SendPropertyChanged("LibroId");
					this.OnLibroIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutorId", DbType="Int NOT NULL")]
		public int AutorId
		{
			get
			{
				return this._AutorId;
			}
			set
			{
				if ((this._AutorId != value))
				{
					if (this._AUTOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutorIdChanging(value);
					this.SendPropertyChanging();
					this._AutorId = value;
					this.SendPropertyChanged("AutorId");
					this.OnAutorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorialId", DbType="Int NOT NULL")]
		public int EditorialId
		{
			get
			{
				return this._EditorialId;
			}
			set
			{
				if ((this._EditorialId != value))
				{
					if (this._EDITORIAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEditorialIdChanging(value);
					this.SendPropertyChanging();
					this._EditorialId = value;
					this.SendPropertyChanged("EditorialId");
					this.OnEditorialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPaginas", DbType="Int NOT NULL")]
		public int NoPaginas
		{
			get
			{
				return this._NoPaginas;
			}
			set
			{
				if ((this._NoPaginas != value))
				{
					this.OnNoPaginasChanging(value);
					this.SendPropertyChanging();
					this._NoPaginas = value;
					this.SendPropertyChanged("NoPaginas");
					this.OnNoPaginasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnoPublicacion", DbType="Int")]
		public System.Nullable<int> AnoPublicacion
		{
			get
			{
				return this._AnoPublicacion;
			}
			set
			{
				if ((this._AnoPublicacion != value))
				{
					this.OnAnoPublicacionChanging(value);
					this.SendPropertyChanging();
					this._AnoPublicacion = value;
					this.SendPropertyChanged("AnoPublicacion");
					this.OnAnoPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaId", DbType="Int NOT NULL")]
		public int CategoriaId
		{
			get
			{
				return this._CategoriaId;
			}
			set
			{
				if ((this._CategoriaId != value))
				{
					if (this._CATEGORIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaIdChanging(value);
					this.SendPropertyChanging();
					this._CategoriaId = value;
					this.SendPropertyChanged("CategoriaId");
					this.OnCategoriaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIBRO_PRESTAMO", Storage="_PRESTAMO", ThisKey="LibroId", OtherKey="LibroId")]
		public EntitySet<PRESTAMO> PRESTAMO
		{
			get
			{
				return this._PRESTAMO;
			}
			set
			{
				this._PRESTAMO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AUTOR_LIBRO", Storage="_AUTOR", ThisKey="AutorId", OtherKey="AutorId", IsForeignKey=true)]
		public AUTOR AUTOR
		{
			get
			{
				return this._AUTOR.Entity;
			}
			set
			{
				AUTOR previousValue = this._AUTOR.Entity;
				if (((previousValue != value) 
							|| (this._AUTOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AUTOR.Entity = null;
						previousValue.LIBRO.Remove(this);
					}
					this._AUTOR.Entity = value;
					if ((value != null))
					{
						value.LIBRO.Add(this);
						this._AutorId = value.AutorId;
					}
					else
					{
						this._AutorId = default(int);
					}
					this.SendPropertyChanged("AUTOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_LIBRO", Storage="_CATEGORIA", ThisKey="CategoriaId", OtherKey="CategoriaId", IsForeignKey=true)]
		public CATEGORIA CATEGORIA
		{
			get
			{
				return this._CATEGORIA.Entity;
			}
			set
			{
				CATEGORIA previousValue = this._CATEGORIA.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORIA.Entity = null;
						previousValue.LIBRO.Remove(this);
					}
					this._CATEGORIA.Entity = value;
					if ((value != null))
					{
						value.LIBRO.Add(this);
						this._CategoriaId = value.CategoriaId;
					}
					else
					{
						this._CategoriaId = default(int);
					}
					this.SendPropertyChanged("CATEGORIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDITORIAL_LIBRO", Storage="_EDITORIAL", ThisKey="EditorialId", OtherKey="EditorialId", IsForeignKey=true)]
		public EDITORIAL EDITORIAL
		{
			get
			{
				return this._EDITORIAL.Entity;
			}
			set
			{
				EDITORIAL previousValue = this._EDITORIAL.Entity;
				if (((previousValue != value) 
							|| (this._EDITORIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EDITORIAL.Entity = null;
						previousValue.LIBRO.Remove(this);
					}
					this._EDITORIAL.Entity = value;
					if ((value != null))
					{
						value.LIBRO.Add(this);
						this._EditorialId = value.EditorialId;
					}
					else
					{
						this._EditorialId = default(int);
					}
					this.SendPropertyChanged("EDITORIAL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRESTAMO(PRESTAMO entity)
		{
			this.SendPropertyChanging();
			entity.LIBRO = this;
		}
		
		private void detach_PRESTAMO(PRESTAMO entity)
		{
			this.SendPropertyChanging();
			entity.LIBRO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRESTAMO")]
	public partial class PRESTAMO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrestamoId;
		
		private System.DateTime _FechaEntrega;
		
		private int _LibroId;
		
		private int _EstudianteId;
		
		private string _Observaciones;
		
		private System.DateTime _FechaDevolucion;
		
		private EntityRef<ESTUDIANTE> _ESTUDIANTE;
		
		private EntityRef<LIBRO> _LIBRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrestamoIdChanging(int value);
    partial void OnPrestamoIdChanged();
    partial void OnFechaEntregaChanging(System.DateTime value);
    partial void OnFechaEntregaChanged();
    partial void OnLibroIdChanging(int value);
    partial void OnLibroIdChanged();
    partial void OnEstudianteIdChanging(int value);
    partial void OnEstudianteIdChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    partial void OnFechaDevolucionChanging(System.DateTime value);
    partial void OnFechaDevolucionChanged();
    #endregion
		
		public PRESTAMO()
		{
			this._ESTUDIANTE = default(EntityRef<ESTUDIANTE>);
			this._LIBRO = default(EntityRef<LIBRO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrestamoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PrestamoId
		{
			get
			{
				return this._PrestamoId;
			}
			set
			{
				if ((this._PrestamoId != value))
				{
					this.OnPrestamoIdChanging(value);
					this.SendPropertyChanging();
					this._PrestamoId = value;
					this.SendPropertyChanged("PrestamoId");
					this.OnPrestamoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEntrega", DbType="Date NOT NULL")]
		public System.DateTime FechaEntrega
		{
			get
			{
				return this._FechaEntrega;
			}
			set
			{
				if ((this._FechaEntrega != value))
				{
					this.OnFechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._FechaEntrega = value;
					this.SendPropertyChanged("FechaEntrega");
					this.OnFechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibroId", DbType="Int NOT NULL")]
		public int LibroId
		{
			get
			{
				return this._LibroId;
			}
			set
			{
				if ((this._LibroId != value))
				{
					if (this._LIBRO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLibroIdChanging(value);
					this.SendPropertyChanging();
					this._LibroId = value;
					this.SendPropertyChanged("LibroId");
					this.OnLibroIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstudianteId", DbType="Int NOT NULL")]
		public int EstudianteId
		{
			get
			{
				return this._EstudianteId;
			}
			set
			{
				if ((this._EstudianteId != value))
				{
					if (this._ESTUDIANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstudianteIdChanging(value);
					this.SendPropertyChanging();
					this._EstudianteId = value;
					this.SendPropertyChanged("EstudianteId");
					this.OnEstudianteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observaciones", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaDevolucion", DbType="Date NOT NULL")]
		public System.DateTime FechaDevolucion
		{
			get
			{
				return this._FechaDevolucion;
			}
			set
			{
				if ((this._FechaDevolucion != value))
				{
					this.OnFechaDevolucionChanging(value);
					this.SendPropertyChanging();
					this._FechaDevolucion = value;
					this.SendPropertyChanged("FechaDevolucion");
					this.OnFechaDevolucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_PRESTAMO", Storage="_ESTUDIANTE", ThisKey="EstudianteId", OtherKey="EstudianteId", IsForeignKey=true)]
		public ESTUDIANTE ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE.Entity;
			}
			set
			{
				ESTUDIANTE previousValue = this._ESTUDIANTE.Entity;
				if (((previousValue != value) 
							|| (this._ESTUDIANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTUDIANTE.Entity = null;
						previousValue.PRESTAMO.Remove(this);
					}
					this._ESTUDIANTE.Entity = value;
					if ((value != null))
					{
						value.PRESTAMO.Add(this);
						this._EstudianteId = value.EstudianteId;
					}
					else
					{
						this._EstudianteId = default(int);
					}
					this.SendPropertyChanged("ESTUDIANTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIBRO_PRESTAMO", Storage="_LIBRO", ThisKey="LibroId", OtherKey="LibroId", IsForeignKey=true)]
		public LIBRO LIBRO
		{
			get
			{
				return this._LIBRO.Entity;
			}
			set
			{
				LIBRO previousValue = this._LIBRO.Entity;
				if (((previousValue != value) 
							|| (this._LIBRO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIBRO.Entity = null;
						previousValue.PRESTAMO.Remove(this);
					}
					this._LIBRO.Entity = value;
					if ((value != null))
					{
						value.PRESTAMO.Add(this);
						this._LibroId = value.LibroId;
					}
					else
					{
						this._LibroId = default(int);
					}
					this.SendPropertyChanged("LIBRO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROGRAMA")]
	public partial class PROGRAMA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramaId;
		
		private string _Nombre;
		
		private EntitySet<ESTUDIANTE> _ESTUDIANTE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramaIdChanging(int value);
    partial void OnProgramaIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public PROGRAMA()
		{
			this._ESTUDIANTE = new EntitySet<ESTUDIANTE>(new Action<ESTUDIANTE>(this.attach_ESTUDIANTE), new Action<ESTUDIANTE>(this.detach_ESTUDIANTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramaId
		{
			get
			{
				return this._ProgramaId;
			}
			set
			{
				if ((this._ProgramaId != value))
				{
					this.OnProgramaIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramaId = value;
					this.SendPropertyChanged("ProgramaId");
					this.OnProgramaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROGRAMA_ESTUDIANTE", Storage="_ESTUDIANTE", ThisKey="ProgramaId", OtherKey="ProgramaId")]
		public EntitySet<ESTUDIANTE> ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE;
			}
			set
			{
				this._ESTUDIANTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESTUDIANTE(ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.PROGRAMA = this;
		}
		
		private void detach_ESTUDIANTE(ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.PROGRAMA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPODOCUMENTO")]
	public partial class TIPODOCUMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipoDocumentoId;
		
		private string _Nombre;
		
		private EntitySet<ESTUDIANTE> _ESTUDIANTE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipoDocumentoIdChanging(int value);
    partial void OnTipoDocumentoIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TIPODOCUMENTO()
		{
			this._ESTUDIANTE = new EntitySet<ESTUDIANTE>(new Action<ESTUDIANTE>(this.attach_ESTUDIANTE), new Action<ESTUDIANTE>(this.detach_ESTUDIANTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoDocumentoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TipoDocumentoId
		{
			get
			{
				return this._TipoDocumentoId;
			}
			set
			{
				if ((this._TipoDocumentoId != value))
				{
					this.OnTipoDocumentoIdChanging(value);
					this.SendPropertyChanging();
					this._TipoDocumentoId = value;
					this.SendPropertyChanged("TipoDocumentoId");
					this.OnTipoDocumentoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPODOCUMENTO_ESTUDIANTE", Storage="_ESTUDIANTE", ThisKey="TipoDocumentoId", OtherKey="TipoDocumentoId")]
		public EntitySet<ESTUDIANTE> ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE;
			}
			set
			{
				this._ESTUDIANTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESTUDIANTE(ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.TIPODOCUMENTO = this;
		}
		
		private void detach_ESTUDIANTE(ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.TIPODOCUMENTO = null;
		}
	}
}
#pragma warning restore 1591
